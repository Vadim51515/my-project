{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Message/Message.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","styles","message","DialogItem","id","dialog","to","name","maxLengthCreator50","maxLengthCreator","AddMesageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","value","newMessageText","placeholder","Dialogs","DialogsElements","DialogsData","map","d","MessagesElements","MessageData","m","isAuth","dialogs","dialogs_item","messages","newMessageBody","addMessage","newMessagesBody","console","log","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,aAAe,8BAA8B,QAAU,2B,sFCQlIC,EAPC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAOC,SAClBH,EAAMG,U,QCMJC,EARI,SAACJ,GACQA,EAAMK,GAC9B,OACI,yBAAKJ,UAAWC,IAAOI,QACnB,kBAAC,IAAD,CAASC,GAAI,YAAcP,EAAMK,IAAKL,EAAMQ,Q,yCCElDC,EAAqBC,YAAiB,IA8CtCC,EAAqBC,YAAU,CAEjCC,KAAM,wBAFiBD,EAhBL,SAACZ,GACnB,OACI,0BAAOc,SAAUd,EAAMe,cACnB,6BACI,kBAACC,EAAA,EAAD,CACAC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBD,KAAK,kBAELa,MAAOrB,EAAMsB,eACbC,YAAY,wBAEhB,mDAQGC,EAjDC,SAACxB,GACb,IAAIyB,EAAkBzB,EAAM0B,YAAYC,KAAI,SAAAC,GAAC,OACzC,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMH,GAAIuB,EAAEvB,QAEhCwB,EAAmB7B,EAAM8B,YAAYH,KAAI,SAAAI,GAAC,OAC1C,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,aAExB,IAAqB,IAAjBH,EAAMgC,OACN,OAAO,kBAAC,IAAD,CAAUzB,GAAG,YAOxB,OACI,yBAAKN,UAAWC,IAAO+B,SACnB,yBAAKhC,UAAWC,IAAOgC,cAClBT,GAGL,yBAAKxB,UAAWC,IAAOiC,UAClBN,EACD,kBAAClB,EAAD,CAAoBG,SAZV,SAACsB,GACnBpC,EAAMqC,WAAWD,EAAeE,iBAChCC,QAAQC,IAAIJ,EAAeE,uB,uBCHpBG,sBACXC,aAfkB,SAACC,GACnB,MAAM,CACFjB,YAAYiB,EAAMC,YAAYlB,YAC9BI,YAAYa,EAAMC,YAAYd,YAC9BR,eAAeqB,EAAMC,YAAYtB,mBAGhB,SAACuB,GAClB,MAAM,CACFR,WAAY,SAACD,GACTS,EAASC,YAAwBV,SAM7CW,IAFWN,CAGbjB","file":"static/js/4.45a66cea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3tlmf\",\"messages\":\"Dialogs_messages__367fA\",\"dialogs_item\":\"Dialogs_dialogs_item__2JGO_\",\"message\":\"Dialogs_message__34ELF\"};","import React from 'react';\r\nimport styles from '../Dialogs.module.css';\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from '../Dialogs.module.css';\r\nconst DialogItem = (props) => {\r\n    let path =\"/dialogs/\" + props.id\r\n    return (\r\n        <div className={styles.dialog} >\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { addMessageActionCreator, ubdateNewMessagetActionCreator } from '../../redux/Dialogs_Reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../Common/Preloader/FormsControls/FormsConrols';\r\nimport { maxLengthCreator, required } from './../../Utils/validators';\r\nconst maxLengthCreator50 = maxLengthCreator(50)\r\nconst Dialogs = (props) => {\r\n    let DialogsElements = props.DialogsData.map(d =>\r\n        <DialogItem name={d.name} id={d.id} />\r\n    )\r\n    let MessagesElements = props.MessageData.map(m =>\r\n        <Message message={m.message} />)\r\n\r\n    if (props.isAuth === false) {\r\n        return <Redirect to='./login'></Redirect>\r\n\r\n    }\r\n    const addNewMessage = (newMessageBody) =>{\r\n        props.addMessage(newMessageBody.newMessagesBody)\r\n        console.log(newMessageBody.newMessagesBody);\r\n    }\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogs_item}>\r\n                {DialogsElements}\r\n            </div>\r\n\r\n            <div className={styles.messages}>\r\n                {MessagesElements}\r\n                <AddMesageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst AddMesageForm = (props) => {\r\n    return (\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field \r\n                component={Textarea}\r\n                validate={[required, maxLengthCreator50]}\r\n                name=\"newMessagesBody\" \r\n                //onChange={onMessageChange} \r\n                value={props.newMessageText}\r\n                placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMesageReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'dialogAddMessageForm'\r\n  })(AddMesageForm)\r\nexport default Dialogs;","import React from 'react';\r\nimport { addMessageActionCreator } from '../../redux/Dialogs_Reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from './../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        DialogsData:state.dialogsPage.DialogsData,\r\n        MessageData:state.dialogsPage.MessageData,\r\n        newMessageText:state.dialogsPage.newMessageText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n        return{\r\n            addMessage: (newMessageBody)=>{\r\n                dispatch(addMessageActionCreator(newMessageBody))},\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}