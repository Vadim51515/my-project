{"version":3,"sources":["Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileStatus.jsx","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","styles","post","message","like","maxLengthCreator10","maxLengthCreator","MyPosts","React","memo","postelement","postData","map","e","posts","MyPostReduxForm","onSubmit","data","addPost","bodyPost","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","value","onChange","currentTarget","onBlur","updateStatus","onClick","Profile","profile","content","src","profil","norka","photos","large","anket","fullName","style","display","minHeading","aboutMe","Preloader","ProfileContainer","userID","this","match","params","authorizenUserId","history","push","getUserProfile","getStatus","compose","auth","userId","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.7a2146d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__bt4o9\",\"like\":\"Post_like__dSMeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3pW6U\",\"norka\":\"Profile_norka__30tru\",\"profil\":\"Profile_profil__FRQcL\",\"anket\":\"Profile_anket__19DO2\",\"minHeading\":\"Profile_minHeading__39_xq\"};","import React from 'react';\r\nimport styles from './Post.module.css';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            New message: \"{props.message}\"\r\n            <div className={styles.like}>\r\n            {props.like}likes\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { addPostActionCreator, ubdateNewPostActionCreator } from './../../../redux/Profile_Reducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from './../../../Utils/validators';\r\nimport { Textarea } from './../../Common/Preloader/FormsControls/FormsConrols';\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\nconst MyPosts = React.memo((props) => {\r\n    let postelement = props.postData.map(e =>\r\n        <div>\r\n            <Post message={e.message} like={e.like} />\r\n            <hr />\r\n        </div>)\r\n\r\n    const addPost = (data) =>{\r\n        props.addPost(data.bodyPost)\r\n    }\r\n    return (\r\n        <div className={styles.posts}>\r\n            <MyPostReduxForm onSubmit={addPost}/>\r\n            {postelement}\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n    const MyPostsForm = (props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={\"bodyPost\"} component={Textarea}  validate={[required,maxLengthCreator10]} placeholder=\"Напишите новый пост\"  />\r\n                </div>\r\n                <div>\r\n                    <button >Add post</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const MyPostReduxForm = reduxForm({\r\n        // a unique name for the form\r\n        form: 'bodyPost'\r\n    })(MyPostsForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostActionCreator } from './../../../redux/Profile_Reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n    postData:state.profilePage.postData,\r\n    newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost:(bodyPost) => {\r\n            dispatch(addPostActionCreator(bodyPost))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;\r\n","import React, { useState } from 'react';\r\nimport styles from './ProfileStatus.module.css';\r\nimport { updateStatus } from './../../redux/Profile_Reducer';\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode:false,\r\n        status:this.props.status\r\n    }\r\n     activateEditMod =() =>{\r\n         this.setState({\r\n            editMode:true\r\n         })\r\n     }\r\n     DiactivateEditMod = (value) =>{\r\n        this.setState({\r\n           editMode:false\r\n        })\r\n        this.props.updateStatus(value)\r\n    }\r\n    onStatusChange = (e) =>{\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props);\r\n        // debugger\r\n        return (\r\n\r\n            <div>\r\n                {this.state.editMode\r\n                ?\r\n                 <input autoFocus={true} onBlur={(e)=>this.DiactivateEditMod(e.currentTarget.value)} \r\n                 value={this.state.status} \r\n                 onChange={this.onStatusChange}/>\r\n                :\r\n                <span onClick={()=>this.activateEditMod()}>{this.props.status || \"Status is not defined\"}</span>\r\n                }\r\n                   \r\n  \r\n                    \r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useState,useEffect } from 'react';\r\nimport styles from './ProfileStatus.module.css';\r\nimport { updateStatus } from '../../redux/Profile_Reducer';\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode,setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(()=>{\r\n    setStatus(props.status)\r\n  },[props.status])\r\n        return (\r\n\r\n            <div>\r\n                {editMode\r\n                ?\r\n                 <input autoFocus={true} \r\n                 value={status} \r\n                 onChange={(e)=>{setStatus(e.currentTarget.value)}}\r\n                 onBlur={(e)=>{\r\n                     setEditMode(false)\r\n                     props.updateStatus(status)\r\n                    }}\r\n                \r\n                />\r\n                :\r\n                <span onClick={(e)=>{setEditMode(true)}}>{props.status ||  \"Status is not defined\"} </span>\r\n                }\r\n                   \r\n  \r\n                    \r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport styles from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from './../Common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    \r\n    return (      \r\n        <div className={styles.content}>\r\n            <img src='https://bigenc.ru/media/2016/10/27/1235208547/19117.jpg'></img>\r\n            <div className={styles.profil}>\r\n                <div className={styles.norka}>\r\n                    <img src={props.profile.photos.large}></img>\r\n                </div>\r\n                <div className={styles.anket}>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                    <h3> {props.profile.fullName}</h3>\r\n                    <div style={{display:\"block\"}}>\r\n                    <span className={styles.minHeading}>Обо мне:</span> {props.profile.aboutMe}\r\n                    <p></p>\r\n                    </div>\r\n                    \r\n                    <p>City: Ekaterinburg</p>\r\n                    <p> Age: 19 year</p>\r\n                    <p> Web Site: http://da-da i</p>\r\n                </div>\r\n            </div>\r\n            <MyPostsContainer />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport * as  axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from './../../redux/Profile_Reducer';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from './../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID\r\n        if (!userID){\r\n            userID = this.props.authorizenUserId\r\n            if (!userID) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n      this.props.getUserProfile(userID)\r\n      this.props.getStatus(userID)\r\n    //   if(this.props.isAuth === false){\r\n    //     return <Redirect to='./login'></Redirect>\r\n        \r\n    // }\r\n    \r\n    }\r\n    render() {\r\n        return (\r\n            <Profile \r\n            {...this.props} \r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizenUserId:state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}